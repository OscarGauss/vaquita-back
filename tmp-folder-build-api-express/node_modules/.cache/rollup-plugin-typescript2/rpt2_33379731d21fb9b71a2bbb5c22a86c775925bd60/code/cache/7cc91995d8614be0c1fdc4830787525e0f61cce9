{"code":"import { log } from 'helpers';\nimport { dbClient } from 'services';\nimport { ErrorCode, JkError, LogLevel } from 'types';\nconst { findByFilter, insertOne, findOne, updateOne, deleteOne } = dbClient.crud('group');\nexport const getGroups = async (companyId, filter, sort) => findByFilter({ ...filter, companyId }, { sort });\nexport const createGroup = async (contest) => {\n    return await insertOne(null, contest);\n};\nexport const getGroup = async (companyId, id) => {\n    const group = await findOne(id);\n    if (group.companyId !== companyId) {\n        log(LogLevel.INFO)(JSON.stringify({ groupId: id, companyId }), 'error on getGroupData');\n        throw new JkError(ErrorCode.ERR0211, { message: 'not found' });\n    }\n    return group;\n};\nexport const updateGroup = async (id, doc) => updateOne(id, doc, null);\nexport const deleteGroup = async (id) => deleteOne(id, null);\n","references":["/Users/oscargauss/Documents/projects/Vaquinha/vaquina-back/tmp-folder-build-api-express/src/helpers/index.ts","/Users/oscargauss/Documents/projects/Vaquinha/vaquina-back/node_modules/mongodb/mongodb.d.ts","/Users/oscargauss/Documents/projects/Vaquinha/vaquina-back/tmp-folder-build-api-express/src/services/index.ts","/Users/oscargauss/Documents/projects/Vaquinha/vaquina-back/tmp-folder-build-api-express/src/types/index.ts","/Users/oscargauss/Documents/projects/Vaquinha/vaquina-back/tmp-folder-build-api-express/src/app/group/types.ts"]}
